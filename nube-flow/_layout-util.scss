@use "variables" as v;

[class*="cnt"] {
  width: 90%;
  max-width: 90rem;
  margin-right: auto;
  margin-left: auto;
}

:root {
  --grid-gap: 0.75rem;
}

[class*="rw"] {
  display: flex;
  flex-wrap: wrap;
  margin-right: calc(-1 * var(--grid-gap));
  margin-left: calc(-1 * var(--grid-gap));
}

[class*="clm"] {
  padding-right: var(--grid-gap);
  padding-left: var(--grid-gap);
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

$columns: (
  "flex-basis": (
    "prefix": "xs",
    "values": (
      "1": 8.33%,
      "2": 16.666%,
      "3": 25%,
      "4": 33.333%,
      "5": 41.666%,
      "6": 50%,
      "7": 58.333%,
      "8": 66.666%,
      "9": 75%,
      "10": 83.3333%,
      "11": 91.67%,
      "12": 100%,
    ),
  ),
);

@each $property, $map in $columns {
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="clm"][class*="xs#{$k}"] {
      #{$property}: $v;
      max-width: $v;
      flex-grow: 1;
      flex-shrink: 1;
    }
  }
}

// generate landscape columns
@media (min-width: #{map-get(v.$breakpoints, "m")}) {
  @each $property, $map in $columns {
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="clm"][class*="sm#{$k}"] {
        #{$property}: $v;
        max-width: $v;
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }
}

// generate tablet columns
@media (min-width: #{map-get(v.$breakpoints, "ml")}) {
  @each $property, $map in $columns {
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="clm"][class*="md#{$k}"] {
        #{$property}: $v;
        max-width: $v;
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }
}

// generate desktop columns
@media (min-width: #{map-get(v.$breakpoints, "t")}) {
  @each $property, $map in $columns {
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="clm"][class*="lg#{$k}"] {
        #{$property}: $v;
        max-width: $v;
        flex-grow: 1;
        flex-shrink: 1;
      }
    }
  }
}
