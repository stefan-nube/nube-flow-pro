@use "variables" as v;

// Flex utilities ////////////////////////////////////////////////////////////////////////

$ui-common: (
  "flex-direction": (
    "prefix": "fd",
    "values": (
      "0": column,
      "1": row,
    ),
  ),
  "justify-content": (
    "prefix": "fj",
    "values": (
      "0": start,
      "1": center,
      "2": end,
      "3": space-between,
      "4": space-around,
    ),
  ),
  "align-items": (
    "prefix": "fa",
    "values": (
      "0": start,
      "1": center,
      "2": end,
      "3": stretch,
      "4": baseline,
    ),
  ),
);

@each $property, $map in $ui-common {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Text alignment ////////////////////////////////////////////////////////////////////////

$txt-align: (
  "text-align": (
    "prefix": "ta",
    "values": (
      "0": left,
      "1": center,
      "2": right,
    ),
  ),
);

@each $property, $map in $txt-align {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// // Text transform ////////////////////////////////////////////////////////////////////////

// @each $key, $val in v.$font-weight {
//   [class*="tw#{$key}"] {
//     font-weight: $val;
//   }
// }

// // Line height ////////////////////////////////////////////////////////////////////////

// @each $key, $val in v.$font-height {
//   [class*="th#{$key}"] {
//     line-height: $val;
//   }
// }

// // Letter spacing ////////////////////////////////////////////////////////////////////////

// @each $key, $val in v.$font-spacing {
//   [class*="ts#{$key}"] {
//     letter-spacing: $val;
//   }
// }

// // Text transform ////////////////////////////////////////////////////////////////////////

// $txt-transform: (
//   "text-transform": (
//     "prefix": "tt",
//     "values": (
//       "0": lowercase,
//       "1": capitalize,
//       "2": uppercase,
//     ),
//   ),
// );

// @each $property, $map in $txt-transform {
//   $prefix: map-get($map, "prefix");
//   $values: map-get($map, "values");

//   @each $k, $v in $values {
//     [class*="#{$prefix}#{$k}"] {
//       #{$property}: $v;
//     }
//   }
// }

// Display ////////////////////////////////////////////////////////////////////////

$display: (
  "display": (
    "prefix": "ed",
    "values": (
      "0": none,
      "1": block,
      "2": flex,
      "3": grid,
      "4": inline-block,
      "5": inline,
      "6": inline-flex,
    ),
  ),
);

@each $property, $map in $display {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Position ////////////////////////////////////////////////////////////////////////

$position: (
  "position": (
    "prefix": "ep",
    "values": (
      "0": static,
      "1": relative,
      "2": absolute,
      "3": fixed,
      "4": sticky,
    ),
  ),
);

@each $property, $map in $position {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow ////////////////////////////////////////////////////////////////////////

$overflow: (
  "overflow": (
    "prefix": "of",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow-x ////////////////////////////////////////////////////////////////////////

$overflow-x: (
  "overflow-x": (
    "prefix": "ox",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow-x {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow-y ////////////////////////////////////////////////////////////////////////

$overflow-y: (
  "overflow-y": (
    "prefix": "oy",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow-y {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="lg_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (max-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Icons ////////////////////////////////////////////////////////////////////////

@each $key, $val in v.$icons {
  [class*="icon#{$key}"] {
    display: flex;
    height: $val;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  [class*="icon#{$key}-#{$key}"] {
    display: flex;
    height: $val;
    width: $val;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}

// Icons relative ////////////////////////////////////////////////////////////////////////

@each $key, $val in v.$icons-rel {
  [class*="icon-#{$key}"] {
    display: flex;
    height: $val;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  [class*="icon-#{$key}-#{$key}"] {
    display: flex;
    height: $val;
    width: $val;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
}
