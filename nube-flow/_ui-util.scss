@use "variables" as v;

// Flex utilities ////////////////////////////////////////////////////////////////////////

$ui-common: (
  "flex-direction": (
    "prefix": "fd",
    "values": (
      "0": column,
      "1": row,
    ),
  ),
  "justify-content": (
    "prefix": "fj",
    "values": (
      "0": start,
      "1": center,
      "2": end,
      "3": space-between,
      "4": space-around,
    ),
  ),
  "align-items": (
    "prefix": "fa",
    "values": (
      "0": start,
      "1": center,
      "2": end,
      "3": stretch,
      "4": baseline,
    ),
  ),
);

@each $property, $map in $ui-common {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
      display: flex;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $ui-common {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
      }
    }
  }
}

// Text alignment ////////////////////////////////////////////////////////////////////////

$txt-align: (
  "text-align": (
    "prefix": "ta",
    "values": (
      "0": left,
      "1": center,
      "2": right,
    ),
  ),
);

@each $property, $map in $txt-align {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $txt-align {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Display ////////////////////////////////////////////////////////////////////////

$display: (
  "display": (
    "prefix": "ed",
    "values": (
      "0": none,
      "1": block,
      "2": flex,
      "3": grid,
      "4": inline-block,
      "5": inline,
      "6": inline-flex,
    ),
  ),
);

@each $property, $map in $display {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $display {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Position ////////////////////////////////////////////////////////////////////////

$position: (
  "position": (
    "prefix": "ep",
    "values": (
      "0": static,
      "1": relative,
      "2": absolute,
      "3": fixed,
      "4": sticky,
    ),
  ),
);

@each $property, $map in $position {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $position {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="xs_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow ////////////////////////////////////////////////////////////////////////

$overflow: (
  "overflow": (
    "prefix": "of",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow-x ////////////////////////////////////////////////////////////////////////

$overflow-x: (
  "overflow-x": (
    "prefix": "ox",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow-x {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow-x {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Overflow-y ////////////////////////////////////////////////////////////////////////

$overflow-y: (
  "overflow-y": (
    "prefix": "oy",
    "values": (
      "0": visible,
      "1": scroll,
      "2": auto,
      "3": hidden,
    ),
  ),
);

@each $property, $map in $overflow-y {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $overflow-y {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
      }
    }
  }
}

// Icons ////////////////////////////////////////////////////////////////////////

$icons: (
  "height": (
    "prefix": "ico",
    "values": (
      "12": 0.75rem,
      "16": 1rem,
      "20": 1.25rem,
      "24": 1.5rem,
      "32": 2rem,
      "40": 2.5rem,
      "48": 3rem,
      "56": 3.5rem,
      "64": 4rem,
      "72": 4.5rem,
      "80": 5rem,
    ),
  ),
);

@each $property, $map in $icons {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}#{$k}"] {
      #{$property}: $v;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    [class*="xs_#{$prefix}#{$k}-#{$k}"] {
      #{$property}: $v;
      width: $v;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $icons {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="sm_#{$prefix}#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $icons {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="md_#{$prefix}#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $icons {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="lg_#{$prefix}#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

// Icons relative ////////////////////////////////////////////////////////////////////////

$icons-rel: (
  "height": (
    "prefix": "ico",
    "values": (
      "xs": 0.5em,
      "s": 0.75em,
      "m": 1em,
      "l": 1.25em,
      "xl": 1.5em,
    ),
  ),
);

@each $property, $map in $icons-rel {
  $prefix: map-get($map, "prefix");
  $values: map-get($map, "values");

  @each $k, $v in $values {
    [class*="xs_#{$prefix}-#{$k}"] {
      #{$property}: $v;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
    [class*="xs_#{$prefix}-#{$k}-#{$k}"] {
      #{$property}: $v;
      width: $v;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "m")) {
  @each $property, $map in $icons-rel {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="sm_#{$prefix}-#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="sm_#{$prefix}-#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "ml")) {
  @each $property, $map in $icons-rel {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="md_#{$prefix}-#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="md_#{$prefix}-#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}

@media (min-width: map-get(v.$breakpoints, "t")) {
  @each $property, $map in $icons-rel {
    $prefix: map-get($map, "prefix");
    $values: map-get($map, "values");

    @each $k, $v in $values {
      [class*="lg_#{$prefix}-#{$k}"] {
        #{$property}: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
      [class*="lg_#{$prefix}-#{$k}-#{$k}"] {
        #{$property}: $v;
        width: $v;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }
    }
  }
}
